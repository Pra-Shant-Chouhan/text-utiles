{"version":3,"sources":["component/Navbar.js","component/TextForm.js","component/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","placeholder","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","replace","navigator","clipboard","writeText","split","join","filter","element","Alert","height","alert","role","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","massage","setTimeout","aboutText","document","body","background","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6a000e39.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { a } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <div>\r\n            <>\r\n                <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n                    <div className=\"container-fluid\">\r\n                        <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n                        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                            <span className=\"navbar-toggler-icon\"></span>\r\n                        </button>\r\n                        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                                <li className=\"nav-item\">\r\n                                    <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n                                </li>\r\n                                {/* <li className=\"nav-item\">\r\n                                    <a className=\"nav-link active\" to=\"/about\">{props.aboutText}</a>\r\n                                </li> */}\r\n\r\n                            </ul>\r\n                            <form className=\"d-flex\">\r\n                                <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                                <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n                            </form>\r\n                            <div className={`form-check form-switch text-${props.mode=== 'light' ? 'dark' : 'light'} mx-2`}>\r\n                                <input className=\"form-check-input\" onClick={props.toggleMode } type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n                                <label className =\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n            </>\r\n        </div>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string.isRequired\r\n}\r\n\r\n// Specifies the default values for props:\r\n\r\n// Navbar.defaultProps = {\r\n//     title: 'Text Utils 4',\r\n//     aboutText:\"About Text Here\"\r\n//   };","import React, { useState } from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    \r\n    const handleUperCaseClick = () => {\r\n        // console.log(\"Upper case was clickd\")\r\n        let newText = text.toUpperCase()\r\n        setText(newText)\r\n        props.showAlert(\"Converted to UpperCase\",\"success\")\r\n    }\r\n\r\n    const handleLowerCaseClick = () => {\r\n        // console.log(\"Upper case was clickd\")\r\n        let newText = text.toLowerCase()\r\n        setText(newText)\r\n        props.showAlert(\"Converted to LowerCase\",\"success\")\r\n    }\r\n    const handleRemoveSpecilChrClick = () => {\r\n    \r\n        \r\n        // let newText = text.replace(/[^a-zA-Z ]/g, \"\") // it removes numbers also\r\n        // let newText = text.replace(/[&\\/\\\\#,+()$~%.'\":*?<>{}]/g, \"\") //or write each specil charct\r\n        let newText = text.replace(/[^a-z A-Z 0-9]/g, \" \");\r\n        // let newText = text.replace(/[^a-z A-Z 0-9]/g, \"*\");  //it removes special charcter and fill with star\r\n        setText(newText)\r\n        props.showAlert(\"All Special Charcter Removed\",\"success\")\r\n    \r\n    }\r\n\r\n    const handleClearCaseClick = () => {\r\n        let newText = ''\r\n        setText(newText)\r\n        props.showAlert(\"Clear all\",\"success\")\r\n    }\r\n    const handleCopy = () => {\r\n        \r\n        \r\n        navigator.clipboard.writeText(text);\r\n        props.showAlert(\"Copied to ClippBord\",\"success\")\r\n    }\r\n    const handlRemExtraSpaces = () => {\r\n        let newText = text.split(/[  ]+/ )\r\n        setText(newText.join(\" \"))\r\n        props.showAlert(\"Clear All extra Spaces\",\"success\")\r\n    }\r\n    const handleOnChange = (event) => {\r\n        // console.log(\"onChange\");\r\n        setText(event.target.value)\r\n    }\r\n    const [text, setText] = useState('Enter text hear');\r\n    // text = \"new text\"  // Wrong way to change the state                \r\n    // setText = (\"new text\")  // correct way to change the state                \r\n\r\n    return (\r\n        <>\r\n            <div className='container' style= {{color: props.mode=== 'dark' ? 'white' : 'black'}} >\r\n                <h3 className=\"my-3solv\">{props.heading} </h3>\r\n                <div className=\"my-3\">\r\n                    <textarea className=\"form-control\" value={text} onChange={handleOnChange} style= {{backgroundColor: props.mode=== 'dark' ? '#13466e' : 'white' ,color: props.mode=== 'dark' ? 'white' : 'black' }} id=\"myBox\" rows=\"9\"></textarea>\r\n                </div>\r\n\r\n                <button disabled = {text.length===0} className=\"btn btn-info mx-2 my-2\" onClick={handleUperCaseClick}>Convert Text to UpperCase</button>\r\n                <button disabled = {text.length===0} className=\"btn btn-warning mx-2 my-2\" onClick={handleLowerCaseClick}>Convert Text to LowerCase</button>\r\n                <button disabled = {text.length===0} className=\"btn btn-danger mx-2 my-2 \" onClick={handleClearCaseClick}>Clear Text</button>\r\n                <button disabled = {text.length===0} className=\"btn btn-success mx-2 my-2\" onClick={handleRemoveSpecilChrClick }>Remove Speical Charcter</button>\r\n                <button disabled = {text.length===0} className=\"btn btn-dark mx-2 my-2\" onClick={handleCopy}>Copy</button>\r\n                <button disabled = {text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handlRemExtraSpaces}>Remove Extra spaces</button>\r\n\r\n            </div>\r\n            <div className=\"container\" style= {{color: props.mode=== 'dark' ? 'white' : 'black'}}  >\r\n                <h3>Your Text Summary</h3>\r\n                <p><b> {text.split(/\\s+/ ).filter((element)=>{return element.length!==0}).length} </b>Words and &<b> {text.length} </b>Character</p>\r\n                <p><b>{0.008 * text.split(\" \").filter((element)=>{return element.length!==0}).length } </b>--Minutes ro read in slow speed</p>\r\n                <p><b>{0.0033 * text.split(\" \").filter((element)=>{return element.length!==0}).length}</b> --Minutes ro read in fast speed</p>\r\n                \r\n                <h3>Preview</h3>\r\n                <p>{ text.length >0 ? text: \"Enter something To preview it Here\"}</p>\r\n\r\n            </div>\r\n        </>\r\n\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word) => {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1)\r\n    }\r\n    return (\r\n        <div my-3 style = {{height: '50px'}}>\r\n\r\n            {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong> {capitalize(props.alert.type)}</strong> : {props.alert.msg}\r\n\r\n                <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n            </div>}\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css';\n// import About from './component/About';\nimport Navbar from './component/Navbar';\nimport TextForm from './component/TextForm';\nimport React, { useState } from 'react'\nimport Alert from './component/Alert';\n\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n// } from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setMode] = useState('light'); // Whether dark mode is enable or not\n  const [alert, setAlert] = useState(null);\n  const showAlert = (massage, type) => {\n    setAlert({\n      msg: massage,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 2000)\n  }\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark')\n      document.body.style.background = '#042743';\n      showAlert(\"Dark mode has been enabled\", \"success\")\n      // document.title = \"TextUtilis-Dark Mode\"\n\n      // setIntervel for Installing app\"\n\n      // setInterval(() => {\n      // document.title = \"TextUtilis is Amazing \"\n\n      // }, 2000);\n      // setInterval(() => {\n      // document.title = \"Instal TextUtils Now\"\n\n      // }, 1500);\n\n    }\n    else {\n      setMode('light')\n      document.body.style.background = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\")\n\n    }\n  }\n  return (\n    <>\n      {/* <Router> */}\n\n      <Navbar title=\"TextUtils\" aboutText=\"About TextUtils\" mode={mode} toggleMode={toggleMode} />\n      {/* <Navbar/> */}\n          <Alert alert={alert} />\n        {/* <Switch> */}\n          {/* /user --> Component 1     */}\n          {/* /user/home --> Component 2 // to remove that bevaiyer of path we use exact path instant of path */}\n        {/* <Route exact path=\"/about\">\n          <About />\n        </Route> */}\n\n        {/* <Route exact path=\"/\"> */}\n          <TextForm showAlert={showAlert} heading=\"Enter The Text to Analyze\" mode={mode} />\n        {/* </Route> */}\n      {/* </Switch> */}\n      \n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}